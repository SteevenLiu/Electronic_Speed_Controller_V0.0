<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\DEMO_STM32F303CC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\DEMO_STM32F303CC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Fri Dec 07 15:30:14 2018
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[63]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3b]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a> from esc_isrs_adc1_2.o(i.ADC1_2_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3b]">ADC3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[46]">ADC4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from stm32f30x_it.o(i.BusFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[21]">CAN1_RX1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[22]">CAN1_SCE_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[47]">COMP1_2_3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[48]">COMP4_5_6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[49]">COMP7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[17]">DMA1_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[18]">DMA1_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[19]">DMA1_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[41]">DMA2_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[42]">DMA2_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[43]">DMA2_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[44]">DMA2_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[45]">DMA2_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from stm32f30x_it.o(i.DebugMon_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[14]">EXTI2_TS_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4d]">FPU_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from stm32f30x_it.o(i.HardFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from stm32f30x_it.o(i.MemManage_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from stm32f30x_it.o(i.NMI_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[d]">PVD_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from stm32f30x_it.o(i.PendSV_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3c]">SPI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32f30x_it.o(i.SVC_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from esc_isrs_systick_1.o(i.SysTick_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4e]">SystemInit</a> from system_stm32f30x.o(i.SystemInit) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[e]">TAMPER_STAMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from esc_isrs_tim1_1.o(i.TIM1_CC_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[25]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3f]">TIM6_DAC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[40]">TIM7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[38]">TIM8_UP_IRQHandler</a> from esc_isrs_tim8_1.o(i.TIM8_UP_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3d]">UART4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3e]">UART5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from esc_isrs_usart1_1.o(i.USART1_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[36]">USBWakeUp_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4c]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1f]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4a]">USB_HP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[20]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4b]">USB_LP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from stm32f30x_it.o(i.UsageFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[50]">__main</a> from __main.o(!!!main) referenced from startup_stm32f30x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[50]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[51]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[53]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[e4]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e5]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[54]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[e6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[55]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[e7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[e9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[ea]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[eb]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[ec]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[ed]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ee]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ef]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[f0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[f1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[f2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[f3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[f4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[fb]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[fc]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[fd]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[fe]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[ff]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[100]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[52]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[101]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[57]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[59]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[102]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[103]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[64]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[104]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[60]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f30x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[105]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5d]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[108]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[109]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[10a]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, esc_isrs_adc1_2.o(i.ADC1_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC1_2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetITStatus
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearITPendingBit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>ADC_AnalogWatchdog1SingleChannelConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_AnalogWatchdog1SingleChannelConfig))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[78]"></a>ADC_AnalogWatchdog1ThresholdsConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_AnalogWatchdog1ThresholdsConfig))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[77]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_AnalogWatchdogCmd))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[67]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>ADC_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[69]"></a>ADC_Configuration_ADC1</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, adc.o(i.ADC_Configuration_ADC1))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADC_Configuration_ADC1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_VoltageRegulatorCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SelectDifferentialMode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SelectCalibrationMode
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdogCmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdog1ThresholdsConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdog1SingleChannelConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[66]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>ADC_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>ADC_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[72]"></a>ADC_Init</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, stm32f30x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[73]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 218 bytes, Stack size 4 bytes, stm32f30x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[6e]"></a>ADC_SelectCalibrationMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_SelectCalibrationMode))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[74]"></a>ADC_SelectDifferentialMode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_SelectDifferentialMode))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[6f]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[76]"></a>ADC_StartConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_StartConversion))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[6c]"></a>ADC_VoltageRegulatorCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_adc.o(i.ADC_VoltageRegulatorCmd))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>Chopper_Phase_I</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_I
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[7e]"></a>Chopper_Phase_II</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_II))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_II
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[7f]"></a>Chopper_Phase_III</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_III))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_III
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[80]"></a>Chopper_Phase_IV</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_IV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_IV
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[81]"></a>Chopper_Phase_V</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_V))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_V
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[82]"></a>Chopper_Phase_VI</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_VI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_VI
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[83]"></a>Chopper_Phase_ZRO</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, esc_chopper.o(i.Chopper_Phase_ZRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chopper_Phase_ZRO
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
</UL>

<P><STRONG><a name="[8e]"></a>DMA_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
</UL>

<P><STRONG><a name="[86]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch7
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch5
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch1
</UL>

<P><STRONG><a name="[84]"></a>DMA_Config_DMA1_Ch1</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, dma.o(i.DMA_Config_DMA1_Ch1))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DMA_Config_DMA1_Ch1 &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>DMA_Config_DMA1_Ch5</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, dma.o(i.DMA_Config_DMA1_Ch5))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DMA_Config_DMA1_Ch5 &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>DMA_Config_DMA1_Ch7</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, dma.o(i.DMA_Config_DMA1_Ch7))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DMA_Config_DMA1_Ch7 &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f30x_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
</UL>

<P><STRONG><a name="[85]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, stm32f30x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch7
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch5
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch1
</UL>

<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>ESC_Commutator_on_Hall_Observer</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, esc_bldcm_hall.o(i.ESC_Commutator_on_Hall_Observer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ESC_Commutator_on_Hall_Observer &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_ZRO
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_VI
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_V
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_IV
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_III
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_II
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_I
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[8b]"></a>ESC_Observer_Hall</STRONG> (Thumb, 2486 bytes, Stack size 40 bytes, esc_bldcm_hall.o(i.ESC_Observer_Hall))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ESC_Observer_Hall
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_32_TX_OVERRUN
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>ESC_Observer_Hall_Reset</STRONG> (Thumb, 194 bytes, Stack size 4 bytes, esc_bldcm_hall.o(i.ESC_Observer_Hall_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ESC_Observer_Hall_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>ESC_PWM_Cntr_Init</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, esc_bldcm_misc.o(i.ESC_PWM_Cntr_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ESC_PWM_Cntr_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[d8]"></a>ESC_Param_fill</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, esc_parameter.o(i.ESC_Param_fill))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>ESC_SPEED_PID</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, esc_bldcm_misc.o(i.ESC_SPEED_PID))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[df]"></a>ESC_SPEED_PID_Reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, esc_bldcm_misc.o(i.ESC_SPEED_PID_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[a1]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a0]"></a>FLASH_SetLatency</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[71]"></a>GPIO_Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f30x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hall_Sink_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[be]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f30x_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
</UL>

<P><STRONG><a name="[91]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_PWM_Cntr_Init
</UL>

<P><STRONG><a name="[92]"></a>Hall_Sink_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hall.o(i.Hall_Sink_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hall_Sink_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>NVIC_Configuration_ADC1_2</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, nvic.o(i.NVIC_Configuration_ADC1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Configuration_ADC1_2 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>NVIC_Configuration_TIM1_Capture</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nvic.o(i.NVIC_Configuration_TIM1_Capture))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Configuration_TIM1_Capture &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>NVIC_Configuration_TIM8_Update</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, nvic.o(i.NVIC_Configuration_TIM8_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Configuration_TIM8_Update &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>NVIC_Configuration_USART1</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, nvic.o(i.NVIC_Configuration_USART1))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Configuration_USART1 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>NVIC_Init</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, stm32f30x_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_USART1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_TIM8_Update
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_TIM1_Capture
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_ADC1_2
</UL>

<P><STRONG><a name="[db]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hall_Sink_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch7
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch5
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch1
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[c2]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
</UL>

<P><STRONG><a name="[bd]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
</UL>

<P><STRONG><a name="[98]"></a>RCC_Configuration</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, rcc.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_Configuration &rArr; RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>RCC_DeInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 776 bytes, Stack size 32 bytes, stm32f30x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a3]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a5]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9d]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9a]"></a>RCC_HSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9e]"></a>RCC_PCLK1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9f]"></a>RCC_PCLK2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a2]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9c]"></a>RCC_PLLConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a4]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9b]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f30x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[8f]"></a>SET_STDSCI_PACK_32_TX_OVERRUN</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, esc_standardsci_protocal.o(i.SET_STDSCI_PACK_32_TX_OVERRUN))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
</UL>

<P><STRONG><a name="[b2]"></a>SET_STDSCI_PACK_32_TX_OVERRUN_INTERVAL</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, esc_standardsci_protocal.o(i.SET_STDSCI_PACK_32_TX_OVERRUN_INTERVAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SET_STDSCI_PACK_32_TX_OVERRUN_INTERVAL
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[68]"></a>SET_STDSCI_PACK_TX_OVERRUN</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, esc_standardsci_protocal.o(i.SET_STDSCI_PACK_TX_OVERRUN))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b1]"></a>SET_STDSCI_PACK_TX_OVERRUN_INTERVAL</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, esc_standardsci_protocal.o(i.SET_STDSCI_PACK_TX_OVERRUN_INTERVAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SET_STDSCI_PACK_TX_OVERRUN_INTERVAL
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a6]"></a>STDSCI_BLOCK_TX_Init</STRONG> (Thumb, 712 bytes, Stack size 8 bytes, esc_standardsci_protocal.o(i.STDSCI_BLOCK_TX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STDSCI_BLOCK_TX_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STDSCI_PACK_TX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>STDSCI_BUFF_RX_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, esc_standardsci_protocal.o(i.STDSCI_BUFF_RX_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>STDSCI_PACK_TX_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, esc_standardsci_protocal.o(i.STDSCI_PACK_TX_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STDSCI_BLOCK_TX_Init
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>StdSci_CrcRsdGnrtr</STRONG> (Thumb, 454 bytes, Stack size 12 bytes, esc_standardsci_protocal.o(i.StdSci_CrcRsdGnrtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StdSci_CrcRsdGnrtr
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Send_in_ISR
</UL>

<P><STRONG><a name="[a8]"></a>StdSci_Receive_in_ISR</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, esc_standardsci_protocal.o(i.StdSci_Receive_in_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = StdSci_Receive_in_ISR &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>StdSci_Send_in_ISR</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, esc_standardsci_protocal.o(i.StdSci_Send_in_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = StdSci_Send_in_ISR &rArr; StdSci_CrcRsdGnrtr
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_CrcRsdGnrtr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 654 bytes, Stack size 32 bytes, esc_isrs_systick_1.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SysTick_Handler &rArr; main_state_machine &rArr; motor_stop_state_reset &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Send_in_ISR
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN_INTERVAL
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_32_TX_OVERRUN_INTERVAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SystemInit</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, system_stm32f30x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, esc_isrs_tim1_1.o(i.TIM1_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM1_CC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, esc_isrs_tim8_1.o(i.TIM8_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM8_UP_IRQHandler &rArr; ESC_Observer_Hall
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>TIM_BDTRConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_BDTRConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[b5]"></a>TIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>TIM_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
</UL>

<P><STRONG><a name="[d0]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[c3]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
</UL>

<P><STRONG><a name="[7b]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ForcedOC1Config))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_ZRO
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_VI
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_V
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_IV
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_III
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_II
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_I
</UL>

<P><STRONG><a name="[7c]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ForcedOC2Config))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_ZRO
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_VI
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_V
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_IV
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_III
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_II
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_I
</UL>

<P><STRONG><a name="[7d]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ForcedOC3Config))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_ZRO
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_VI
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_V
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_IV
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_III
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_II
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chopper_Phase_I
</UL>

<P><STRONG><a name="[b4]"></a>TIM_GetCapture1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_GetCapture1))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[b7]"></a>TIM_GetCapture2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_GetCapture2))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>TIM_GetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[b9]"></a>TIM_ICInit</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, stm32f30x_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM_ICInit &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
</UL>

<P><STRONG><a name="[dd]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>TIM_OC1Init</STRONG> (Thumb, 136 bytes, Stack size 4 bytes, stm32f30x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[c9]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[c7]"></a>TIM_OC2Init</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, stm32f30x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[ca]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[c8]"></a>TIM_OC3Init</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, stm32f30x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[cb]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[cd]"></a>TIM_OC6Init</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, stm32f30x_tim.o(i.TIM_OC6Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_OC6Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[ce]"></a>TIM_OC6PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC6PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[bb]"></a>TIM_PWMIConfig</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32f30x_tim.o(i.TIM_PWMIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_PWMIConfig &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
</UL>

<P><STRONG><a name="[c4]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SelectCCDMA))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
</UL>

<P><STRONG><a name="[cf]"></a>TIM_SelectOutputTrigger2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SelectOutputTrigger2))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
</UL>

<P><STRONG><a name="[e1]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SetCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_duty
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>

<P><STRONG><a name="[e2]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_duty
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>

<P><STRONG><a name="[e3]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_duty
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>

<P><STRONG><a name="[d9]"></a>TIM_SetCompare6</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_SetCompare6))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, stm32f30x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
</UL>

<P><STRONG><a name="[bc]"></a>Timer1_CAP_Sink_Init</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, timer.o(i.Timer1_CAP_Sink_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Timer1_CAP_Sink_Init &rArr; TIM_PWMIConfig &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>Timer2_CAP_Sink_Init</STRONG> (Thumb, 282 bytes, Stack size 72 bytes, timer.o(i.Timer2_CAP_Sink_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Timer2_CAP_Sink_Init &rArr; TIM_ICInit &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectCCDMA
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>Timer8_PWM_Drive_Init</STRONG> (Thumb, 402 bytes, Stack size 96 bytes, timer.o(i.Timer8_PWM_Drive_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Timer8_PWM_Drive_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6PreloadConfig
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, esc_isrs_usart1_1.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART1_IRQHandler &rArr; StdSci_Receive_in_ISR &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Receive_in_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>USART1_Init</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, usart.o(i.USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Receive_in_ISR
</UL>

<P><STRONG><a name="[d3]"></a>USART_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[ad]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Send_in_ISR
</UL>

<P><STRONG><a name="[a9]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, stm32f30x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Receive_in_ISR
</UL>

<P><STRONG><a name="[dc]"></a>USART_ITConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>USART_Init</STRONG> (Thumb, 184 bytes, Stack size 104 bytes, stm32f30x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[aa]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Receive_in_ISR
</UL>

<P><STRONG><a name="[af]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StdSci_Send_in_ISR
</UL>

<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>control_state_machine</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, esc_statemachine_control.o(i.control_state_machine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = control_state_machine &rArr; ESC_Commutator_on_Hall_Observer &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_duty
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_control
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[6d]"></a>delay_us</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer8_PWM_Drive_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_CAP_Sink_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_CAP_Sink_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare6
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STDSCI_BUFF_RX_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STDSCI_BLOCK_TX_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_USART1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_TIM8_Update
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_TIM1_Capture
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration_ADC1_2
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hall_Sink_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Param_fill
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_PWM_Cntr_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Observer_Hall_Reset
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch7
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch5
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config_DMA1_Ch1
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration_ADC1
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b0]"></a>main_state_machine</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, esc_statemachine_main.o(i.main_state_machine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_state_machine &rArr; motor_stop_state_reset &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_PWM_Cntr_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_SPEED_PID_Reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_SPEED_PID
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_STDSCI_PACK_TX_OVERRUN
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[de]"></a>motor_stop_state_reset</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, esc_bldcm_misc.o(i.motor_stop_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = motor_stop_state_reset &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[8a]"></a>pwm_disable</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, esc_bldcm_basic.o(i.pwm_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC3Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ForcedOC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Commutator_on_Hall_Observer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[d5]"></a>pwm_duty_control</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, esc_bldcm_misc.o(i.pwm_duty_control))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[d6]"></a>set_duty</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, esc_bldcm_basic.o(i.set_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[56]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[10d]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[10e]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ba]"></a>TI2_Config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f30x_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
